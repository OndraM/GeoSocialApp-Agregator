<div id="detail">
<h1><?=$this->pois[0]->name;?></h1>
<div id="detail-map"></div>
<strong id="venue-source">Sources of venue data:</strong>
<?php
echo "<ul>\n";
foreach ($this->pois as $poi) {
    if (count($this->serviceParams) > 1) {
        $tmpArray = $this->serviceParams;
        unset($tmpArray[array_search($poi->type, $tmpArray)]);
        $removeServiceUrl = http_build_query($tmpArray);
    }
    echo "\t<li><a href=\""
        . $this->escape($poi->url)
        . "\" class=\"external\""
        . "title=\"Open venue detail on "
        . $this->services[$poi->type]['name']
        . " (opens in new window)\""
        . ">"
        . $this->serviceIcon($poi->type)
        . $this->escape($poi->name)
        . "</a>"
        . ((count($this->serviceParams) > 1) ?
                " <a class=\"popUp fancybox.ajax removeService hidden\" title=\"Remove data from this service\"href=\"/poi/show-detail?"
                    . $removeServiceUrl
                    . "\"><span><img src=\""
                    . $this->baseUrl() . "/images/remove-disabled.png"
                    . "\" alt=\"Remove\" class=\"icon-right\" /></span>"
                    . "<span class=\"hidden\"><img src=\""
                    . $this->baseUrl() . "/images/remove.png"
                    . "\" alt=\"Remove\" class=\"icon-right\" /></span></a>"
                : ""
            )
        . "</li>\n";
}
echo "</ul>\n";
?>
<h2>Contact</h2>
<?php
$address = $this->listPoisField($this->pois, 'address');
if (!empty($address)) {
    echo "<h3 id=\"venue-address\">Address</h3>\n";
    echo $address;
}
?>
<?php
$phone = $this->listPoisField($this->pois, 'phone');
if (!empty($phone)) {
    echo "<h3 id=\"venue-phone\">Phone</h3>\n";
    echo $phone;
}
?>
<?php
$links = $this->listPoisField($this->pois, 'links');
if (!empty($links)) {
    echo "<h3 id=\"venue-links\">Links</h3>\n";
    echo $links;
}
?>
<?php
$photos = '';
foreach ($this->pois as $poi) {
    foreach ($poi->photos as $arrI => $arrV) {
        $photos .= "\t<li title=\"Click to show image detail\"><a href=\"{$arrV["url"]}\" title=\"Click to show image detail\"><img src=\"{$arrV["thumbnail"]}\" width=\"100\" height=\"100\" /></a></li>\n";
    }
}

if (!empty($photos)) {
    echo "<h2 id=\"venue-photos\">Photos</h2>\n";
    echo "<div id=\"photos-wrapper\">";
    echo "<ul id=\"photos-carousel\">\n";
    echo $photos;
    echo "</ul>";
    echo "</div>\n";   
}
?>

<?php
$tips = $this->listPoisField($this->pois, 'tips');
if (!empty($tips)) {
    echo "<h2 id=\"venue-tips\">Tips</h2>\n";
    echo $tips;
}
?>
</div>
<?php
$script = "var markers = [];";
foreach ($this->pois as $poi) {
    $script .= "markers.push([new google.maps.LatLng(" . $poi->lat . ", " . $poi->lng . "), 'Venue location by " . $this->services[$poi->type]['name'] . "']);";
}

$script .= "
    initDetail();
    var latlng = new google.maps.LatLng(" . $this->pois[0]->lat . "," . $this->pois[0]->lng . ");
    
    var mapOptions = {
        zoom: 16,
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
        // TODO: hide some control elements?
    };
    var map = new google.maps.Map(
        document.getElementById('detail-map'),
        mapOptions
    );    
    
    var bounds = new google.maps.LatLngBounds ();
    $.each(markers, function(i, marker) {    
        new google.maps.Marker({
            position: marker[0],
            map: map,
            title: marker[1]
        });
      bounds.extend(marker[0]);
    });    
    var boundsInitListener = google.maps.event.addListener(map, 'bounds_changed', function() { // limit maximum zoom after fit bounds 
        google.maps.event.removeListener(boundsInitListener); // do it only once
        if (map.getZoom() > 17) {
            map.setZoom(17);
        }
        // Why use listener? It is way how to ensure is is called after map init.
    });
    map.fitBounds(bounds);
    
    
    
    var allTips = $('#venue-tips').next('ul').children();
    var tipsLimit = 10;
    if (allTips.length > tipsLimit) {
        var hideTips = allTips.slice(tipsLimit);
        hideTips.hide();
        $('<li><a href=\"#\">Only ' + tipsLimit + ' first tips are shown. Click here to show remaining ' + hideTips.length + '.</a></li>')
            .appendTo($('#venue-tips').next('ul'))
            .click(function() {
                hideTips.show();
                $(this).remove();
            });
    }
            
    // init photo carousel
    $('#photos-carousel').bxSlider({
        displaySlideQty: 5,
        moveSlideQty: 5,
        infiniteLoop: false,
        hideControlOnEnd: true,
        startingSlide: 0
    });
    
    // define photo tooltip options
    $('#photos-carousel li a').tipsy({
        gravity: $.fn.tipsy.autoNS,
        html: true,
        opacity: 1,
        trigger: 'manual'
    });
    
    // show tooltip photo on click
    $('#photos-carousel li a').click(function() {
        console.log($(this).attr('data-detail'));
        $(this).attr('original-title', 
            '<div class=\"photo-tooltip\">'
            + '<img src=\"' + $(this).attr('href') + '\" height=\"210\"/>'
            + '</div>'
        );
        $(this).tipsy('show');
        return false;
    });
    // hide tooltip photo on mouse leave
    $('#photos-carousel li a').mouseleave(function() {
        $(this).tipsy('hide');
    });
    
    // show Remove icon on mousover
    $('#venue-source').next('ul').children().mouseover(function(){
        $('.removeService', this).show();
    });
    // hide Remove icon on mousout
    $('#venue-source').next('ul').children().mouseout(function(){
        $('.removeService', this).hide();
    });
    
    // make Remove icon color on mouseenter in
    $('.removeService').mouseenter(function(){
        $('span:eq(1)', this).show();
        $('span:eq(0)', this).hide();
    });
    // make Remove icon again BW on mouseleave
    $('.removeService').mouseleave(function(){
        $('span:eq(1)', this).hide();
        $('span:eq(0)', this).show();
    });    
";
echo $this->script($script, true);
?>
